---
# - name: Run common
#   import_playbook: common.yml

- name: Deploy pi with Ansible
  hosts: pi
  become: yes

  # vars:
  #   nvm_install_script_version: "0.33.11"
  #   nvm_node_version: "4.1.1"
  #   nvm_install_globally: ['peerflix']
  #   terraform_ver: "0.12.20"

  vars:
    prometheus_targets:
      node:
      - targets:
        - localhost:9100
        labels:
          env: localhost

  roles:
    - ohmyzsh
    - cloudalchemy.node-exporter
    - cloudalchemy.blackbox-exporter
    - cloudalchemy.prometheus
    # - cloudalchemy.alertmanager
    # - cloudalchemy.grafana
    - common-pi
    #- bihealth.python3
    #- andrewrothstein.vagrant
    #- azure-data-studio
    #- cloud-sql-proxy
    #- plank
    # - grzegorznowak.nvm_node
    #- andrewrothstein.terraform
    #- suzuki-shunsuke.git-lfs-ubuntu
    #- gnagano.ansible_gitflow
    # - ngetchell.vscode
    ##- capistrano
    ##- rgibert.valve_steam
    # - geerlingguy.packer
    # ##- docker
    # - gantsign.minikube
    # - andrewrothstein.kubectl
    # - rke
    # - andrewrothstein.kubernetes-helm
    # - rancher2-cli
    # - kompose-converter
    # #- wtanaka.gcloud_sdk
    # - ibmcloud
    # - azurecli

  tasks:
    - name : list users to apply oh-my-zsh
      shell: "getent passwd {1000..1010} | awk -F: '$3 {print $1}'"
      register: users

    # - name: Reload Font cache
    #   shell: fc-cache -fv

  #   - name: Config git user
  #     shell: git config --global color.ui true && git config --global user.email "{{ item }}@{{ ansible_fqdn }}" && git config --global user.name "{{ item }}"
  #     with_items: "{{ users.stdout_lines }}"

  #   - name: Add Vagrant plugins
  #     shell: vagrant plugin install vagrant-mutate vagrant-libvirt vagrant-vbguest vagrant-puppet-install vocker  vagrant-lxc vagrant-list vagrant-hosts vagrant-hostmanager vagrant-exec vagrant-camera vagrant-cachier sahara vagrant-scp

    - name: Fix Docker execution without sudo #Issue #7
      shell: "users=$( getent passwd {1000..1010} | awk -F: '$3 {print $1}' );for user in $users; do sudo usermod -a -G docker $user; done"